id: k8s_containers_running_as_root
title: Kubernetes Containers Running as Root
type: query
primary_table: k8_pod
description: Finds containers that are configured to run as root (or likely to run as root by default) within pods. This checks for securityContext.runAsNonRoot=false or missing, and securityContext.runAsUser=0 or missing at both pod and container levels. Running containers as root increases the potential impact of a container compromise.
metadata:
  reasoning: Containers running as the root user have elevated privileges within the container's namespaces. If a vulnerability is exploited, the attacker gains root access within the container, potentially facilitating escape or further exploitation. Best practice is to run containers as non-root users with the minimum required privileges.
  value: Reduce the potential impact of container compromises by enforcing the principle of least privilege for container user IDs.
integration_type:
  - kubernetes_cluster
query: |
  SELECT DISTINCT
    p.platform_integration_id,
    p.namespace || '/' || p.title AS resource,
    'alarm' AS status,
    'Pod ''' || p.title || ''' in namespace ''' || p.namespace || ''' container ''' || (c ->> 'Name') || ''' may run as root.' AS reason,
    jsonb_build_object(
      'pod_title', p.title,
      'namespace', p.namespace,
      'container_name', c ->> 'Name',
      'container_image', c ->> 'Image',
      'container_security_context', c -> 'SecurityContext',
      'pod_security_context', p.security_context,
      'node_name', p.node_name
    ) AS finding_details
  FROM
    k8_pod AS p,
    jsonb_array_elements(COALESCE(p.containers, '[]'::jsonb)) AS c
  WHERE
    -- Condition 1: Container explicitly configured to run as root
    (
      (c -> 'SecurityContext' ->> 'RunAsNonRoot' = 'false') -- Explicitly false
      OR
      ( (c -> 'SecurityContext' ->> 'RunAsNonRoot' IS NULL) AND (c -> 'SecurityContext' ->> 'RunAsUser' = '0') ) -- runAsNonRoot is null, and runAsUser is 0
    )
    -- Condition 2: Pod context forces root, and container doesn't override
    OR
    (
      ( (p.security_context ->> 'RunAsNonRoot' = 'false') OR ( (p.security_context ->> 'RunAsNonRoot' IS NULL) AND (p.security_context ->> 'RunAsUser' = '0') ) ) -- Pod context forces root
      AND (c -> 'SecurityContext' ->> 'RunAsUser' IS NULL) -- Container does not specify user
      AND (c -> 'SecurityContext' ->> 'RunAsNonRoot' IS NULL OR c -> 'SecurityContext' ->> 'RunAsNonRoot' = 'false') -- Container does not specify runAsNonRoot=true
    )
    -- Condition 3: Neither Pod nor Container specifies user/nonRoot (defaults to image definition, often root) - check if *no* setting prevents root
    OR
    (
       (p.security_context ->> 'RunAsUser' IS NULL AND p.security_context ->> 'RunAsNonRoot' IS NULL) -- Pod has no relevant settings
       AND (c -> 'SecurityContext' ->> 'RunAsUser' IS NULL AND c -> 'SecurityContext' ->> 'RunAsNonRoot' IS NULL) -- Container has no relevant settings
    )
  ORDER BY
    p.platform_integration_id ASC,
    resource ASC;
tags:
  asset: Kubernetes
  value: Reduce Security Risk
  outcome: Limit Blast Radius
  standard: CIS Kubernetes Benchmark
classification:
  - [ "Security", "Workload Configuration" ]
  - [ "Security", "Vulnerabilities", "Containers" ]
  - [ "Security", "IAM", "Excessive Permissions" ]